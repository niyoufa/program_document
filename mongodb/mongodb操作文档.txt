MongoDB 操作文档

1. 启动和停止MongoDB

(1) 启动MongoDB 
sudo mongod -f /etc/mongodb.conf
或 
sudo mongod --dbpath <dbpath> 
或
window : 
mongod -dbpath "E:\mongodb\data\db"
mongod --port 27017 --dbpath "D:\set up\mongodb\data"

(2) 关闭MongDB
关闭MongDB服务进程

2. shell客户端的使用
mongo admin --username "dbadmin" --password "niyoufa"

3. shell脚本
从客户端登录 执行load(js脚本文件) 
或 
在终端执行 mongo dbname --eval "MongoDB脚本语句" 

4. 管理用户账户
(1) 新建一个用户
use admin ; 
db.addUser({user:"testUser",pwd:"test",roles:["readWrite","dbAdmin"]})

(2) roles 字段
文档操作 : read , readWrite , 
数据库操作(用户读取和写入数据库,清理，修改，压缩，得到统计概要) : dbAdmin , 
一般的管理操作(连接，集群，复制，列出数据库，创建数据库，删除数据库) : clusterAdmin , 
数据库用户操作 : userAdmin 

以上取值加上AnyDatabase 只能应用到 admin 数据库的用户中

(3) 查看用户列表
show users ; 

5. 配置访问控制
(1) 创建用户管理员账户(只有创建用户的权限)

use admin ; 
db.addUser({
    user : "useradmin" , 
    pwd : "920816" , 
    roles : ["userAdminAnyDatabase"] 
})

(2) 重新启动MongoDB
sudo mongod --dbpath <dbpath> --auth 
之后通过客户端登录MongDB数据库执行操作时需要用户身份认证
认证方式 : I . 连接数据库admin后 执行 db.auth("useradmin","920816") 
                   II . sudo mongo admin --dbpath <dbpath> --username "useradmin" --password "920816"

(3) 创建数据库管理员账户
use admin ; 
db.addUser({
    user : "dbadmin" , 
    pwd : "niyoufa" , 
    "roles" : ["readWriteAnyDatabase" , "dbadminAnyDatabase" , "clusterAdmin"] 
})

6. 管理数据库
(1) 查看数据库
show dbs ; 

(2) 切换数据库
user db_name ; 

(3) 创建数据库
use newDB ; 
db.createCollection("newCollection") ; 

(4) 删除数据库
use dbname ; 
db.dropDatabase() ; 

(5) 复制数据库
use dbname ; 
db.copyDatabase(origin,destination,[hostname]) ; 

7. 管理集合

(1) 显示数据库中的集合列表
use dbname ; 
show collections ; 

(2) 创建集合
use dbname ; 
db.createCollection(name[,size,max,capped,autoIndexID]) ; 

(3) 删除集合
use dbname ; 
coll = db.getCollection("collectionname") ; 
coll.drop() ; 
或 
db.coll_name.drop()

(4) 查询文档
使用collection对象上的find(query)方法查询集合中的文档
use dbname ; 
coll = db.getCollection(collectionname) ; 
coll.find() ; 
coll.find({username:"niyoufa"}) ; 
coll.find().pretty() ; //已易读的方式打印

(5) 插入文档到集合中
use dbname ; 
coll = db.getCollection(collectionname) ; 
coll.insert({
    username : "niyoufa" , 
    age : 20 
})

(6) 删除文档
use dbname ; 
coll = db.getCollection(collectionname) ; 
coll.remove({username:"niyoufa"}) ; 
coll.remove(query,justOne) ; 
query : 查询字典
justOne :  true 或 1 ，只删除一个文档

(7) 更新文档
use dbname ; 
coll = db.getCollection(collectionname) ; 
coll.save(dcumentObject) ; 
coll.update(query,update,opitons) ; 
query : 查询字典
update : { $inc : {count:1} , $set : {name : "New Name"} , $rename : { "nickname" : "alias"} }
options : { upsert : false , multi : true } 

8. 常见问题
> db.copyDatabase("code","code1")
{ "ok" : 0, "errmsg" : "unauthorized" }

9. MongoDB 数据类型

数据类型    描述
String  字符串。存储数据常用的数据类型。在 MongoDB 中，UTF-8 编码的字符串才是合法的。
Integer 整型数值。用于存储数值。根据你所采用的服务器，可分为 32 位或 64 位。
Boolean 布尔值。用于存储布尔值（真/假）。
Double  双精度浮点值。用于存储浮点值。
Min/Max keys    将一个值与 BSON（二进制的 JSON）元素的最低值和最高值相对比。
Arrays  用于将数组或列表或多个值存储为一个键。
Timestamp   时间戳。记录文档修改或添加的具体时间。
Object  用于内嵌文档。
Null    用于创建空值。
Symbol  符号。该数据类型基本上等同于字符串类型，但不同的是，它一般用于采用特殊符号类型的语言。
Date    日期时间。用 UNIX 时间格式来存储当前日期或时间。你可以指定自己的日期时间：创建 Date 对象，传入年月日信息。
Object ID   对象 ID。用于创建文档的 ID。
Binary Data 二进制数据。用于存储二进制数据。
Code    代码类型。用于在文档中存储 JavaScript 代码。
Regular expression  正则表达式类型。用于存储正则表达式。

10 . 条件操作符

(>) 大于 - $gt
(<) 小于 - $lt
(>=) 大于等于 - $gte
(<= ) 小于等于 - $lte


11. 条件操作符 $or

>db.col.find(
   {
      $or: [
         {key1: value1}, {key2:value2}
      ]
   }
).pretty() 

12 . 条件操作符 $type
类型  数字  备注
Double                          1    
String                          2    
Object                          3    
Array                           4    
Binary data                     5    
Undefined                       6                   已废弃。
Object id                       7    
Boolean                         8    
Date                            9    
Null                            10   
Regular Expression              11   
JavaScript                      13   
Symbol                          14   
JavaScript (with scope)         15   
32-bit integer                  16   
Timestamp                       17   
64-bit integer                  18   
Min key                         255                 Query with -1.
Max key                         127  

db.col.find({"title" : {$type : 2}})

13 . limit

db.COLLECTION_NAME.find().limit(NUMBER)

14. skip

db.COLLECTION_NAME.find().limit(NUMBER).skip(NUMBER)

15. sort

db.COLLECTION_NAME.find().sort({KEY:1}) // 升序
db.COLLECTION_NAME.find().sort({KEY:-1})// 降序

16. MongDB 索引

db.COLLECTION_NAME.ensureIndex({KEY:1})
1：升序； -1：降序
可选参数 ： 
ensureIndex() 接收可选参数，可选参数列表如下：
Parameter   Type    Description
background  Boolean 建索引过程会阻塞其它数据库操作，background可指定以后台方式创建索引，即增加 "background" 可选参数。 "background" 默认值为false。
unique  Boolean 建立的索引是否唯一。指定为true创建唯一索引。默认值为false.
name    string  索引的名称。如果未指定，MongoDB的通过连接索引的字段名和排序顺序生成一个索引名称。
dropDups    Boolean 在建立唯一索引时是否删除重复记录,指定 true 创建唯一索引。默认值为 false.
sparse  Boolean 对文档中不存在的字段数据不启用索引；这个参数需要特别注意，如果设置为true的话，在索引字段中不会查询出不包含对应字段的文档.。默认值为 false.
expireAfterSeconds  integer 指定一个以秒为单位的数值，完成 TTL设定，设定集合的生存时间。
v   index version   索引的版本号。默认的索引版本取决于mongod创建索引时运行的版本。
weights document    索引权重值，数值在 1 到 99,999 之间，表示该索引相对于其他索引字段的得分权重。
default_language    string  对于文本索引，该参数决定了停用词及词干和词器的规则的列表。 默认为英语
language_override   string  对于文本索引，该参数指定了包含在文档中的字段名，语言覆盖默认的language，默认值为 language.

db.values.ensureIndex({open: 1, close: 1}, {background: true})

17. MongoDB 聚合 

db.COLLECTION_NAME.aggregate(AGGREGATE_OPERATION)

db.mycol.aggregate([{$group : {_id : "$by_user", num_tutorial : {$sum : 1}}}])
{
   "result" : [
      {
         "_id" : "w3cschool.cc",
         "num_tutorial" : 2
      },
      {
         "_id" : "Neo4j",
         "num_tutorial" : 1
      }
   ],
   "ok" : 1
}

18. MongoDB 复制

(1)启动服务 ：
mongod --port 27017 --dbpath "E:\mongodb\data\db" --replSet rs0

(2)连接服务 ：
mongo localhost:27017

(3)副本集设置
rs0.initiate()
rs0.status()

(4) 添加副本集
rs0.add(HOST_NAME:PORT)

19. MongoDB 分片

20. MongoDB 备份与还原

(1) 备份 
mongodump -h dbhost -d dbname -o dbdirectory
mongodump -h localhost:27017 -d user -o output_file
mongodump --host localhost:27017 --collection coll_name --db db_name -o output_file

(2) 还原
mongorestore -h dbhost -d dbname --dir dbdirectory
mongorestore -h dbhost -d dbname -c collection --dir collbsonfiledirectory

21. MongoDB 监控

(1) mongostat

(2) mongotop
mongotop 
mongotop 10 // sleeptime
mongotop --locks






